(()=>{"use strict";class e{constructor(e){this.uuid=e.uuid,this.repository=e.repository,this.owner=e.owner,this.pull_number=e.pull_number,this.data=e.data,this.events=e.events}getDependencies(){return this.events}}new class{getAnalysisOutput(t,n,o){return s=this,i=void 0,a=function*(){const s=yield fetch(`http://localhost:4000/analysis?owner=${t}&repo=${n}&pull_number=${o}`).then((e=>e.json())).then((t=>new e(t))).catch((e=>console.error(e)));if(!s)throw new Error("Analysis not found");return s},new((r=void 0)||(r=Promise))((function(e,t){function n(e){try{c(a.next(e))}catch(e){t(e)}}function o(e){try{c(a.throw(e))}catch(e){t(e)}}function c(t){var s;t.done?e(t.value):(s=t.value,s instanceof r?s:new r((function(e){e(s)}))).then(n,o)}c((a=a.apply(s,i||[])).next())}));var s,i,r,a}},chrome.webNavigation.onHistoryStateUpdated.addListener((function(e){const{tabId:t,documentLifecycle:n,url:o}=e;if("active"===n){if(void 0===o)throw new Error("url not found");null!==o.match(/^https:\/\/github\.com\/.+\/.+\/pull\/\d+.*$/)&&(console.log("NavTab Listener called at: "+o),chrome.scripting.executeScript({target:{tabId:t},files:["./js/navtab.js"]}))}})),chrome.runtime.onMessage.addListener(((e,t,n)=>{var o;if("goto-dependencies"===e.message){const e=null===(o=t.tab)||void 0===o?void 0:o.id;if(void 0===e)throw n({message:"tabId not found"}),new Error("tabId not found");!function(e){console.log("TabContent inserted"),chrome.scripting.executeScript({target:{tabId:e},files:["./js/navcontent.js"]})}(e),n({message:"Navigating to dependencies tab"})}else n({message:"Invalid message"})}))})();